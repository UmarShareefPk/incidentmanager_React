[{"C:\\Users\\umar\\Desktop\\Learning\\IM\\IM_React\\incidentmanager\\src\\index.js":"1","C:\\Users\\umar\\Desktop\\Learning\\IM\\IM_React\\incidentmanager\\src\\App.js":"2","C:\\Users\\umar\\Desktop\\Learning\\IM\\IM_React\\incidentmanager\\src\\reportWebVitals.js":"3","C:\\Users\\umar\\Desktop\\Learning\\IM\\IM_React\\incidentmanager\\src\\components\\Login\\Login.js":"4","C:\\Users\\umar\\Desktop\\Learning\\IM\\IM_React\\incidentmanager\\src\\store\\reducers\\rootReducer.js":"5","C:\\Users\\umar\\Desktop\\Learning\\IM\\IM_React\\incidentmanager\\src\\store\\reducers\\userLoginReducer.js":"6","C:\\Users\\umar\\Desktop\\Learning\\IM\\IM_React\\incidentmanager\\src\\store\\reducers\\usersReducer.js":"7","C:\\Users\\umar\\Desktop\\Learning\\IM\\IM_React\\incidentmanager\\src\\store\\reducers\\incidentsReducer.js":"8","C:\\Users\\umar\\Desktop\\Learning\\IM\\IM_React\\incidentmanager\\src\\models\\UserLogin.js":"9","C:\\Users\\umar\\Desktop\\Learning\\IM\\IM_React\\incidentmanager\\src\\store\\actions\\usersActions.js":"10","C:\\Users\\umar\\Desktop\\Learning\\IM\\IM_React\\incidentmanager\\src\\store\\actions\\userLoginActions.js":"11","C:\\Users\\umar\\Desktop\\Learning\\IM\\IM_React\\incidentmanager\\src\\components\\NavBar.js":"12","C:\\Users\\umar\\Desktop\\Learning\\IM\\IM_React\\incidentmanager\\src\\components\\Incidents\\IncidentLisiting.js":"13","C:\\Users\\umar\\Desktop\\Learning\\IM\\IM_React\\incidentmanager\\src\\components\\Incidents\\Incident.js":"14","C:\\Users\\umar\\Desktop\\Learning\\IM\\IM_React\\incidentmanager\\src\\components\\Pages.js":"15","C:\\Users\\umar\\Desktop\\Learning\\IM\\IM_React\\incidentmanager\\src\\components\\PageActions.js":"16","C:\\Users\\umar\\Desktop\\Learning\\IM\\IM_React\\incidentmanager\\src\\store\\actions\\incidentsActions.js":"17","C:\\Users\\umar\\Desktop\\Learning\\IM\\IM_React\\incidentmanager\\src\\components\\Incidents\\AddNew.js":"18","C:\\Users\\umar\\Desktop\\Learning\\IM\\IM_React\\incidentmanager\\src\\models\\Incident.js":"19","C:\\Users\\umar\\Desktop\\Learning\\IM\\IM_React\\incidentmanager\\src\\components\\Users\\UsersList.js":"20","C:\\Users\\umar\\Desktop\\Learning\\IM\\IM_React\\incidentmanager\\src\\components\\Users\\User.js":"21","C:\\Users\\umar\\Desktop\\Learning\\IM\\IM_React\\incidentmanager\\src\\components\\Users\\AddUser.js":"22","C:\\Users\\umar\\Desktop\\Learning\\IM\\IM_React\\incidentmanager\\src\\components\\Incidents\\IncidentDetails.js":"23","C:\\Users\\umar\\Desktop\\Learning\\IM\\IM_React\\incidentmanager\\src\\components\\Incidents\\Comment.js":"24"},{"size":1122,"mtime":1608337289896,"results":"25","hashOfConfig":"26"},{"size":1308,"mtime":1608868927796,"results":"27","hashOfConfig":"26"},{"size":362,"mtime":499162500000,"results":"28","hashOfConfig":"26"},{"size":2692,"mtime":1608494033872,"results":"29","hashOfConfig":"26"},{"size":372,"mtime":1608144276597,"results":"30","hashOfConfig":"26"},{"size":870,"mtime":1608493781093,"results":"31","hashOfConfig":"26"},{"size":769,"mtime":1608728255191,"results":"32","hashOfConfig":"26"},{"size":953,"mtime":1609502370310,"results":"33","hashOfConfig":"26"},{"size":313,"mtime":1608141332470,"results":"34","hashOfConfig":"26"},{"size":1911,"mtime":1608747325720,"results":"35","hashOfConfig":"26"},{"size":1279,"mtime":1608494127237,"results":"36","hashOfConfig":"26"},{"size":2799,"mtime":1609523436312,"results":"37","hashOfConfig":"26"},{"size":4391,"mtime":1609623027586,"results":"38","hashOfConfig":"26"},{"size":1945,"mtime":1609624278132,"results":"39","hashOfConfig":"26"},{"size":3100,"mtime":1609257390175,"results":"40","hashOfConfig":"26"},{"size":1130,"mtime":1608419315181,"results":"41","hashOfConfig":"26"},{"size":4191,"mtime":1609619522218,"results":"42","hashOfConfig":"26"},{"size":12840,"mtime":1609616344321,"results":"43","hashOfConfig":"26"},{"size":710,"mtime":1608480696106,"results":"44","hashOfConfig":"26"},{"size":3404,"mtime":1608751854010,"results":"45","hashOfConfig":"26"},{"size":263,"mtime":1608746276170,"results":"46","hashOfConfig":"26"},{"size":6483,"mtime":1608752688290,"results":"47","hashOfConfig":"26"},{"size":26376,"mtime":1609622337717,"results":"48","hashOfConfig":"26"},{"size":6954,"mtime":1609621745955,"results":"49","hashOfConfig":"26"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},"wm3clw",{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"69","messages":"70","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"71","usedDeprecatedRules":"52"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"76","usedDeprecatedRules":"52"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"81","messages":"82","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"83","usedDeprecatedRules":"52"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"86","usedDeprecatedRules":"52"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"89","messages":"90","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"91","usedDeprecatedRules":"52"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"97","usedDeprecatedRules":"52"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"102","usedDeprecatedRules":"52"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"105","messages":"106","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Users\\umar\\Desktop\\Learning\\IM\\IM_React\\incidentmanager\\src\\index.js",[],["107","108"],"C:\\Users\\umar\\Desktop\\Learning\\IM\\IM_React\\incidentmanager\\src\\App.js",[],"C:\\Users\\umar\\Desktop\\Learning\\IM\\IM_React\\incidentmanager\\src\\reportWebVitals.js",[],"C:\\Users\\umar\\Desktop\\Learning\\IM\\IM_React\\incidentmanager\\src\\components\\Login\\Login.js",[],"C:\\Users\\umar\\Desktop\\Learning\\IM\\IM_React\\incidentmanager\\src\\store\\reducers\\rootReducer.js",[],"C:\\Users\\umar\\Desktop\\Learning\\IM\\IM_React\\incidentmanager\\src\\store\\reducers\\userLoginReducer.js",[],"C:\\Users\\umar\\Desktop\\Learning\\IM\\IM_React\\incidentmanager\\src\\store\\reducers\\usersReducer.js",[],"C:\\Users\\umar\\Desktop\\Learning\\IM\\IM_React\\incidentmanager\\src\\store\\reducers\\incidentsReducer.js",[],"C:\\Users\\umar\\Desktop\\Learning\\IM\\IM_React\\incidentmanager\\src\\models\\UserLogin.js",[],"C:\\Users\\umar\\Desktop\\Learning\\IM\\IM_React\\incidentmanager\\src\\store\\actions\\usersActions.js",["109"],"import axios from 'axios';\r\n\r\nexport const  allUsers = (parameters) => {\r\n    return (dispatch, getState) => {  \r\n     \r\n        axios.defaults.headers = {'Authorization': `Bearer ${getState().userLogin.token + \"\"}`};\r\n\r\n        const url = \"https://localhost:44398/api/users/AllUsers\";\r\n        axios.get(url)\r\n          .then((response)=>{            \r\n             const users = response.data;\r\n              dispatch({ type: 'ALL_USERS', users });\r\n          })\r\n          .catch((err)=>{                 \r\n                   console.log(err);\r\n          });\r\n    \r\n    }\r\n  }\r\n\r\n  export const userssWithPage = (parameters) => {\r\n    return (dispatch, getState) => {  \r\n     \r\n        axios.defaults.headers = {'Authorization': `Bearer ${getState().userLogin.token + \"\"}`};\r\n        const url = \"https://localhost:44398/api/Users/GetUsersWithPage?\"+\r\n                    \"PageSize=\" + parameters.PageSize +\"&PageNumber=\" + parameters.PageNumber \r\n                    + \"&SortBy=q&SortDirection=q&Search=\" + parameters.Search;\r\n        axios.get(url)\r\n          .then((response)=>{            \r\n             const data = response.data;             \r\n              dispatch({ type: 'USERS_WITH_PAGE', data });\r\n          })\r\n          .catch((err)=>{                 \r\n                   console.log(err);\r\n          });    \r\n    }\r\n  }\r\n\r\n  export const addNewUser = (formData) => {\r\n    return (dispatch, getState) => {  \r\n     \r\n        axios.defaults.headers = {'Authorization': `Bearer ${getState().userLogin.token + \"\"}`};\r\n        const url = \"https://localhost:44398/api/Users/AddUser\"\r\n        axios.post(url, formData)\r\n          .then((response)=>{            \r\n             const data = response.data;\r\n            //  dispatch({ type: 'INCIDENTS_WITH_PAGE', data });\r\n          })\r\n          .catch((err)=>{                 \r\n                   console.log(err);\r\n          });\r\n    \r\n    }\r\n  }","C:\\Users\\umar\\Desktop\\Learning\\IM\\IM_React\\incidentmanager\\src\\store\\actions\\userLoginActions.js",[],"C:\\Users\\umar\\Desktop\\Learning\\IM\\IM_React\\incidentmanager\\src\\components\\NavBar.js",["110","111","112","113","114"],"import {React} from 'react'\r\nimport { NavLink } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport '../styles/Navbar.css';\r\n\r\nfunction NavBar({user_Name}) {\r\n\r\n    return (\r\n      <nav className=\"nav-wrapper indigo darken-4\">\r\n        <div className=\"container\">\r\n          <div className=\"left\">\r\n            <NavLink to=\"/incidentListing\" className=\"brand-logo\">             \r\n              Incident Manager\r\n            </NavLink>\r\n          </div>\r\n          <a href=\"#\" className=\"sidenav-trigger\" data-target=\"mobile-menu\">\r\n            <i className=\"material-icons\">menu</i>\r\n          </a>\r\n          <ul className=\"right hide-on-med-and-down\">\r\n            <li>     \r\n              <NavLink to=\"/incidentListing\" >             \r\n                 Incidents\r\n              </NavLink> \r\n            </li>\r\n            <li>\r\n              <NavLink to=\"/UsersList\" >             \r\n                   Users \r\n                </NavLink>              \r\n            </li>\r\n            <li>\r\n              <a>Contact</a>\r\n            </li>\r\n            <li>\r\n              <a href=\"\" className=\"btn-floating z-depth-0 indigo darken-4\">\r\n                <i className=\"material-icons\">notifications</i>\r\n              </a>\r\n            </li>\r\n            <li>\r\n              <span className=\"badge white-text new pink\">5</span>\r\n            </li>\r\n            <li>\r\n                <button type=\"button\" title={user_Name} className=\"btn-floating  orange darken-3 userWelcome\" >\r\n                  {user_Name.split(/\\s/).reduce((response,word)=> response+=word.slice(0,1),'')} \r\n                 </button>\r\n            </li>\r\n          </ul>\r\n          {/* for mobile */}\r\n          <ul className=\"sidenav grey lighten-2\" id=\"mobile-menu\">\r\n            <li>\r\n              <NavLink to=\"/incidentListing\"  className=\"sidenav-close\">             \r\n                  Incidents\r\n                </NavLink>               \r\n            </li>\r\n            <li>\r\n                <NavLink to=\"/UsersList\" className=\"sidenav-close\">             \r\n                       Users\r\n                  </NavLink>            \r\n            </li>\r\n            <li>\r\n              <a className=\"sidenav-close\">Contact</a>\r\n            </li>\r\n            <li>\r\n              <a href=\"\" className=\" white-text\">\r\n                <i className=\"material-icons\">notifications</i>\r\n                <span className=\"Indigo-text\">5</span>\r\n              </a>\r\n            </li>\r\n          </ul>\r\n        </div>\r\n      </nav>\r\n    );\r\n}\r\n\r\n\r\nconst mapStateToProps = (state) => {        \r\n  return{      \r\n      user_Name :state.userLogin.user_Name, // Logged in User's name\r\n      userId :state.userLogin.userId,  // logged in User Id       \r\n  }\r\n}\r\n\r\n\r\nexport default connect(mapStateToProps, null)(NavBar);\r\n","C:\\Users\\umar\\Desktop\\Learning\\IM\\IM_React\\incidentmanager\\src\\components\\Incidents\\IncidentLisiting.js",["115","116"],"C:\\Users\\umar\\Desktop\\Learning\\IM\\IM_React\\incidentmanager\\src\\components\\Incidents\\Incident.js",[],"C:\\Users\\umar\\Desktop\\Learning\\IM\\IM_React\\incidentmanager\\src\\components\\Pages.js",["117","118"],"import {React, useState, useEffect, useRef} from 'react';\r\nimport M from 'materialize-css';\r\n\r\n\r\n\r\n\r\nexport default function Pages({TotalPages, PostsPerPage, setPageNumber, setPageSize , search }) {\r\n\r\n    const [currentPage, setCurrentPage] = useState(1);\r\n    const [currentSize, setCurrentSize] = useState(5);\r\n\r\n    const ddlRef = useRef();\r\n\r\n    let pages = [];\r\n    for(let i = 1; i <= Math.ceil(TotalPages / PostsPerPage) ; i++ )\r\n    {\r\n        pages.push(i);\r\n    }\r\n\r\n    const pageNumberClick = (p) =>{\r\n        if(p <1 || p > pages.length)\r\n            return;\r\n        setPageNumber(p);\r\n        setCurrentPage(p);\r\n    }\r\n\r\n    const pageSizeChanged = (pSize) => {\r\n        setPageSize(pSize);\r\n        setCurrentSize(pSize);\r\n        setCurrentPage(1);\r\n        setPageNumber(1);\r\n    }\r\n\r\n    useEffect(() => {\r\n        setCurrentPage(1);\r\n        setPageNumber(1);        \r\n        M.FormSelect.init(ddlRef.current); \r\n    }, [search])\r\n\r\n    pages = pages.map((p,index)=>{\r\n        let pclass = currentPage === p ? \"waves-effect active\" : \"waves-effect\";        \r\n        return (             \r\n            <li className={pclass} key={p}  onClick={() => pageNumberClick(p)}>              \r\n              <a > {p} </a>\r\n            </li>        \r\n        );\r\n    });\r\n  \r\n    return (\r\n        \r\n      <div className=\"row pagesRow\">\r\n        <div className=\"input-field col s12 m4 l4\">\r\n                            <select value={currentSize} onChange={(e) => pageSizeChanged(e.target.value)}\r\n                             ref={ddlRef}  >\t\t\t\t\t\t\r\n                                <option value=\"5\">5</option>\r\n                                <option value=\"10\">10</option>\r\n                                <option value=\"15\">15</option>\r\n                                <option value=\"20\">20</option>\r\n                                <option value=\"25\">25</option>\r\n                                <option value=\"30\">30</option>\r\n                                <option value=\"35\">35</option>\r\n                                <option value=\"40\">40</option>\r\n                                <option value=\"45\">45</option>\r\n                                <option value=\"50\">50</option>\r\n                            </select>\t\r\n                        <label>Page Size</label>\t\t\t\t\t\t\r\n        </div>\r\n        <div className=\"input-field col s12 m8 l8\">\r\n            <ul className=\"pagination right\">\r\n            <li\r\n                className={  currentPage === 1 ? \"waves-effect disabled\" : \"waves-effect\" } >\r\n                <a href=\"#!\" onClick={() => pageNumberClick(currentPage - 1)}>\r\n                <i className=\"material-icons\">chevron_left</i>\r\n                </a>\r\n            </li>\r\n            {pages}\r\n            <li\r\n                className={ currentPage === pages.length ? \"waves-effect disabled\" : \"waves-effect\" } >\r\n                <a href=\"#!\" onClick={() => pageNumberClick(currentPage + 1)}>\r\n                <i className=\"material-icons\">chevron_right</i>\r\n                </a>\r\n            </li>\r\n            </ul>\r\n        </div>\r\n      </div>\r\n    );\r\n}\r\n","C:\\Users\\umar\\Desktop\\Learning\\IM\\IM_React\\incidentmanager\\src\\components\\PageActions.js",["119","120","121"],"import React from 'react'\r\n\r\nexport default function PageActions(props) {\r\n    return (\r\n      <section className=\"container\">\r\n        <div className=\"row \">\r\n          <div className=\"col s12 l5\">\r\n            <div className=\"left\">\r\n              <h4 className=\"title\">{props.Title}</h4>\r\n            </div>\r\n          </div>\r\n          \r\n          <div className=\"col s7 l9 hide\">\r\n            <div className=\"right\">\r\n              <ul className=\"actionsBtns\">\r\n                <li>\r\n                  <a className=\"btn-floating green\">\r\n                    <i className=\"material-icons\">refresh</i>\r\n                  </a>\r\n                </li>\r\n                <li>\r\n                  <a className=\"btn-floating red\">\r\n                    <i className=\"material-icons\">print</i>\r\n                  </a>\r\n                </li>\r\n                <li>\r\n                  <a className=\"btn-floating blue\">\r\n                    <i className=\"material-icons\">file_download</i>\r\n                  </a>\r\n                </li>\r\n              </ul>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </section>\r\n    );\r\n}\r\n","C:\\Users\\umar\\Desktop\\Learning\\IM\\IM_React\\incidentmanager\\src\\store\\actions\\incidentsActions.js",["122","123"],"C:\\Users\\umar\\Desktop\\Learning\\IM\\IM_React\\incidentmanager\\src\\components\\Incidents\\AddNew.js",["124"],"import {React , useRef, useEffect, useState} from 'react';\r\nimport PageActions from \"../PageActions\";\r\nimport M from 'materialize-css';\r\nimport {  useHistory  } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport { allUsers } from '../../store/actions/usersActions';\r\nimport { addNewIncident } from '../../store/actions/incidentsActions';\r\n\r\n function AddNew({getAllAssignees, allAssignees, userId, addNewIncident}) {\r\n\r\n    const dueDateTimeRef= useRef();\r\n    const dueDateDateRef= useRef();\r\n    const startTimeTimeRef = useRef();\r\n    const startTimeDateRef = useRef();\r\n    const assigneeRef = useRef();\r\n    \r\n   \r\n\r\n    const history = useHistory();\r\n\r\n    const [title, setTitle] = useState(\"\");\r\n    const [description, setDescription] = useState(\"\");\r\n    const [additionalDetails, setAdditionalDetails] = useState(\"\");  \r\n    const [files , setFiles] = useState(null);\r\n    const [assignee, setAssignee] = useState(null);  \r\n    const [assigneeName, setAssigneeName] = useState(\"\");  \r\n    const [assigneeList, setAssigneeList] = useState(allAssignees);\r\n    const [formError, setFormError] = useState(\"\");\r\n\r\n    useEffect(() => {\r\n      console.log(\"Set hook\");\r\n      setAssigneeList(allAssignees);\r\n    }, [allAssignees])\r\n\r\n    useEffect(() => {      \r\n        M.Datepicker.init(startTimeDateRef.current);\r\n        M.Timepicker.init(startTimeTimeRef.current);\r\n        M.Datepicker.init(dueDateDateRef.current);\r\n        M.Timepicker.init(dueDateTimeRef.current);\r\n        var options = {\r\n          closeOnClick : false\r\n        }\r\n        M.Dropdown.init(assigneeRef.current, options);\r\n        getAllAssignees();\r\n    }, []);\r\n\r\n   const onFileChange = (event) => {    \r\n     if (event.target.files.length > 3) {\r\n       //alert(\"You can only attach upto 3 files. All extra files will be ignored.\");\r\n     }     \r\n     setFiles(event.target.files);\r\n   };\r\n\r\n   const cancelClick = (event) => {\r\n     event.preventDefault();\r\n     history.goBack();\r\n     //console.log(history);\r\n   };\r\n\r\n\r\n   const assigneeSelected = (userId) => {       \r\n    let currentAssignee = allAssignees.find(assignee => {\r\n        return assignee.Id === userId\r\n    })\r\n    console.log(currentAssignee);\r\n    var assigneeDropdown = M.Dropdown.getInstance(assigneeRef.current);\r\n    assigneeDropdown.close();\r\n    setAssignee(userId);\r\n    setAssigneeName(currentAssignee.FirstName + \" \" + currentAssignee.LastName);\r\n   }\r\n\r\n   const searchAssignee = (event) => {    \r\n     let newList = [];\r\n     if(event.target.value !== \"\")\r\n        newList = allAssignees.filter(assignee => {    \r\n        return assignee.FirstName.toUpperCase().startsWith(event.target.value.toUpperCase()) \r\n            || assignee.LastName.toUpperCase().startsWith(event.target.value.toUpperCase());\r\n      });\r\n    \r\n     if(newList !== undefined && newList.length !== 0){ //check if there is atlease one assignee       \r\n      newList = [].concat(newList); \r\n     }\r\n     else{//if search found nothing, show all assignees\r\n        newList = allAssignees.slice(0,allAssignees.length);       \r\n     } \r\n     setAssigneeList(newList);   \r\n   }\r\n\r\n   const validateForm = () => {\r\n\r\n    if(title === \"\" || description ===\"\" || dueDateDateRef.current.value === \"\" || dueDateTimeRef.current.value === \"\"\r\n        || startTimeDateRef.current.value === \"\" || startTimeTimeRef.current.value === \"\"  )\r\n        return false;\r\n    return true;\r\n\r\n   }\r\n\r\n   const saveClick = (event) => {\r\n    event.preventDefault();     \r\n    if(!validateForm()){\r\n      setFormError(\"Please complete required fields before saving.\")\r\n      return;\r\n    }\r\n    \r\n    setFormError(\"\");\r\n\r\n    let startTime  = new Date( startTimeDateRef.current.value + \" \" + startTimeTimeRef.current.value);\r\n    startTime = (startTime.getMonth() + 1) + \"/\" + startTime.getDate() + \"/\" +  startTime.getFullYear() \r\n                + \" \" + startTime.getHours() + \":\" + startTime.getMinutes() + \":\" + startTime.getSeconds(); \r\n\r\n    let dueDate  = new Date( dueDateDateRef.current.value + \" \" + dueDateTimeRef.current.value);\r\n    dueDate = (dueDate.getMonth() + 1) + \"/\" + dueDate.getDate() + \"/\" +  dueDate.getFullYear() \r\n                + \" \" + dueDate.getHours() + \":\" + dueDate.getMinutes() + \":\" + dueDate.getSeconds(); \r\n   \r\n    const formData = new FormData(); \r\n\r\n    if(files){\r\n        for(let i = 0; i < files.length ; i++){\r\n          formData.append( \r\n            \"Attachment\" + i+1, \r\n            files[i], \r\n            files[i].name \r\n          );\r\n        }\r\n    }   \r\n     formData.append(\"CreatedBy\", userId); \r\n     formData.append(\"AssignedTo\", assignee);\r\n     formData.append(\"Title\", title); \r\n     formData.append(\"Description\", description); \r\n     formData.append(\"AdditionalDeta\", additionalDetails); \r\n     formData.append(\"StartTime\", startTime ); \r\n     formData.append(\"DueDate\",  dueDate ); \r\n     formData.append(\"Status\", \"N\"); \r\n\r\n     \r\n     //setTitle(\"\");\r\n\r\n     addNewIncident(formData);\r\n\r\n    // setTitle(\"\");\r\n     //setDescription(\"\");\r\n     \r\n\r\n  }; \r\n\r\n \r\n    return (\r\n      <>\r\n        <PageActions Title={\"Add new Incident\"} />\r\n        <section>\r\n          <div className=\"container\">\r\n            <div className=\"row\">\r\n              <div className=\"col s12 l10 offset-l1\">\r\n                <form>\r\n                  <div className=\"row\">\r\n                    <div className=\"col s12 l6\">\r\n                      <div className=\"input-field \">\r\n                        <input\r\n                        className=\"validate\"\r\n                          required\r\n                          type=\"text\"\r\n                          id=\"title\"\r\n                          value={title}\r\n                          onChange={(e) => setTitle(e.target.value)}\r\n                        />\r\n                        <label htmlFor=\"title\">Title</label>\r\n                      </div>\r\n                    </div>\r\n\r\n                    <div className=\"input-field col s12 l6\">                    \r\n                      <input\r\n                        readOnly                    \r\n                        required\r\n                        type=\"text\"\r\n                        className=\"dropdown-trigger validate\"\r\n                        id=\"assignee\"\r\n                        data-target=\"dropdown1\"\r\n                        placeholder=\"\"\r\n                        ref={assigneeRef}\r\n                        value={assigneeName}\r\n                      />                    \r\n                      \r\n                       <label htmlFor=\"assignee\">Assignee </label> \r\n                    </div>\r\n                      <ul id=\"dropdown1\" className=\"dropdown-content\">\r\n                        <li>\r\n                          <input type=\"text\"  placeholder=\"Search Assignee\" onChange={searchAssignee}     />\r\n                        </li>\r\n                        {!assigneeList? null : assigneeList.map((user) => {\r\n                          return (\r\n                            <li  key={user.Id} onClick= {()=>assigneeSelected(user.Id)}>\r\n                              <a className=\"indigo-text\" href=\"#!\">  {user.FirstName + \" \" + user.LastName}    </a>\r\n                            </li>\r\n                          );\r\n                        })}\r\n                      </ul>                   \r\n                  </div>\r\n                  <div className=\"input-field\">\r\n                    <textarea\r\n                      required\r\n                      value={description}\r\n                      id=\"description\"\r\n                      className=\"materialize-textarea validate\"\r\n                      onChange={(e) => setDescription(e.target.value)}\r\n                    ></textarea>\r\n                    <label htmlFor=\"description\" className=\"\">\r\n                      Description\r\n                    </label>\r\n                  </div>\r\n\r\n                  <div className=\"input-field\">\r\n                    <textarea\r\n                      value={additionalDetails}\r\n                      id=\"additionalDetails\"\r\n                      className=\"materialize-textarea\"\r\n                      onChange={(e) => setAdditionalDetails(e.target.value)}\r\n                    ></textarea>\r\n                    <label htmlFor=\"additionalDetails\" className=\"\">\r\n                      Additional Details\r\n                    </label>\r\n                  </div>\r\n\r\n                  <div className=\"row\">\r\n                    <div className=\"input-field col s6\">\r\n                      <input\r\n                        required\r\n                        type=\"text\"\r\n                        id=\"startTimeDate\"\r\n                        className=\"datepicker validate\"\r\n                        ref={startTimeDateRef}\r\n                      />\r\n                      <label htmlFor=\"startTimeDate\" className=\"\">\r\n                        When the problem started (Pick Date)\r\n                      </label>\r\n                    </div>\r\n\r\n                    <div className=\"input-field col s6\">\r\n                      <input\r\n                        required\r\n                        type=\"text\"\r\n                        id=\"startTimeTime\"\r\n                        className=\"timepicker validate\"\r\n                        ref={startTimeTimeRef}\r\n                      />\r\n                      <label htmlFor=\"startTimeime\" className=\"\">\r\n                        When the problem started (Pick Time)\r\n                      </label>\r\n                    </div>\r\n                  </div>\r\n\r\n                  <div className=\"row\">\r\n                    <div className=\"input-field col s6\">\r\n                      <input\r\n                        required\r\n                        type=\"text\"\r\n                        id=\"dueDateDate\"\r\n                        className=\"datepicker validate\"\r\n                        ref={dueDateDateRef}\r\n                      />\r\n                      <label htmlFor=\"dueDateDate\" className=\"\">\r\n                        Due Date (Pick Date)\r\n                      </label>\r\n                    </div>\r\n\r\n                    <div className=\"input-field col s6\">\r\n                      <input\r\n                        required\r\n                        type=\"text\"\r\n                        id=\"dueDateTime\"\r\n                        className=\"timepicker validate\" \r\n                        ref={dueDateTimeRef}\r\n                      />\r\n                      <label htmlFor=\"dueDateTime\" className=\"\">\r\n                        Due Date (Pick Time)\r\n                      </label>\r\n                    </div>\r\n                  </div>\r\n\r\n                  <div className=\"file-field input-field\">\r\n                    <div className=\"btn indigo darken-2\">\r\n                      <i className=\"material-icons \">attachment</i>\r\n                      <input\r\n                        type=\"file\"\r\n                        id=\"attachment\"\r\n                        multiple\r\n                        onChange={onFileChange}\r\n                      />\r\n                    </div>\r\n                    <div className=\"file-path-wrapper\">\r\n                      <input\r\n                        className=\"file-path validate\"\r\n                        type=\"text\"\r\n                        placeholder=\"Upload upto 3 files\"\r\n                      />\r\n                    </div>\r\n                  </div>\r\n                  \r\n                  <div className=\"input-field\">\r\n                      <p className=\"red-text center\">{formError ? formError : \"\" }</p>\r\n                  </div>\r\n\r\n                  \r\n                  <div className=\"input-field \">\r\n                    <button\r\n                      className=\"btn green darken-2 left\"\r\n                      onClick={saveClick}\r\n                    >\r\n                      <span>Save</span>\r\n                      <i className=\"material-icons right\">save</i>\r\n                    </button>\r\n\r\n                    <button\r\n                      className=\"btn yellow darken-4 left\"\r\n                      onClick={cancelClick}\r\n                    >\r\n                      <span>Cancel</span>\r\n                      <i className=\"material-icons right\">cancel</i>\r\n                    </button>\r\n                  </div>\r\n                </form>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </section>\r\n      </>\r\n    );\r\n}\r\n\r\nconst mapStateToProps = (state) => {        \r\n    return{\r\n        allAssignees : state.users.users,\r\n        user_Name :state.userLogin.user_Name, // Logged in User's name\r\n        userId :state.userLogin.userId,  // logged in User Id       \r\n    }\r\n  }\r\n  \r\n  const mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        getAllAssignees: () => dispatch(allUsers()),\r\n        addNewIncident : (formData) => dispatch(addNewIncident(formData))\r\n    }\r\n  }\r\n  \r\nexport default connect(mapStateToProps, mapDispatchToProps)(AddNew);\r\n","C:\\Users\\umar\\Desktop\\Learning\\IM\\IM_React\\incidentmanager\\src\\models\\Incident.js",[],["125","126"],"C:\\Users\\umar\\Desktop\\Learning\\IM\\IM_React\\incidentmanager\\src\\components\\Users\\UsersList.js",["127"],"import { React, useState, useEffect} from 'react'\r\nimport { connect } from 'react-redux'\r\nimport Pages from '../Pages'\r\nimport User from './User'\r\nimport PageActions from \"../PageActions\";\r\nimport { userssWithPage } from \"../../store/actions/usersActions\";\r\nimport {  useHistory  } from 'react-router-dom'\r\n\r\n function UsersList(props) {\r\n\r\n    const [PageNumber, setPageNumber] = useState(1);\r\n    const [PageSize, setPageSize] = useState(5);\r\n    const [Search, setSearch] = useState(\"\");\r\n\r\n    const history = useHistory();\r\n    \r\n    useEffect(() => {\r\n        const parameters = {\r\n            PageNumber : PageNumber,\r\n            PageSize : PageSize,\r\n            Search : Search\r\n        }        \r\n        props.userssWithPage(parameters);\r\n        return () => {\r\n            \r\n        }\r\n    }, [PageNumber, PageSize, Search])\r\n\r\n    const searchTextChange =   (text) => {      \r\n            setSearch(text);\r\n            setPageNumber(1);\r\n    }\r\n\r\n    const addNewClick = ()=>{\r\n      let path = '/AddUser';      \r\n      history.push(path);\r\n    }\r\n    \r\n    return (\r\n      <>\r\n        <PageActions Title={\"Users\"} /> \r\n\r\n        <section>\r\n          <div className=\"container\">\r\n            <div className=\"row\">\r\n\r\n              <div className=\"col s6 l6\">\r\n                <div className=\"input-field\">                \r\n                  <input type=\"text\"  value={Search}  onChange={(e) => searchTextChange(e.target.value)} />\r\n                  <label htmlFor=\"search\">Search</label>\r\n                </div>\r\n              </div>\r\n              \r\n              <div className=\"col s6 l6\">\r\n                <div className=\"input-field\">              \r\n                  <button className=\"btn green darken-4 right\" onClick={()=>addNewClick()} >\r\n                    <span>Add New</span>\r\n                    <i className=\"material-icons right\">create</i>\r\n                  </button>\r\n                </div>\r\n              </div>\r\n\r\n              <div className=\"col s12 l12\">\r\n                <table className=\"responsive-table highlight incidentsTbl\">\r\n                  <thead>\r\n                    <tr className=\"header\" data-target=\"blue\">\r\n                      <th>First Name</th>\r\n                      <th>Last Name</th>\r\n                      <th>Email</th>                      \r\n                      <th>Created Date</th>                     \r\n                    </tr>\r\n                  </thead>\r\n                  <tbody>\r\n                  {\r\n                      props.Users.map(user=>{\r\n                          return (\r\n                            <User key={user.Id} user= {user} />                          )\r\n                      })\r\n                  }           \r\n                  </tbody>\r\n                </table>\r\n                <Pages  TotalPages={props.TotalUsers} PostsPerPage={PageSize} setPageNumber={setPageNumber} setPageSize={setPageSize} search={Search} />\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </section>\r\n      </>\r\n    );\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return{\r\n        Users : state.users.Users,\r\n        TotalUsers : state.users.TotalUsers     \r\n    }\r\n  }\r\n  \r\n  const mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        userssWithPage: (parameters) => dispatch(userssWithPage(parameters))\r\n    }\r\n  }\r\n  \r\n  export default connect(mapStateToProps, mapDispatchToProps)(UsersList);","C:\\Users\\umar\\Desktop\\Learning\\IM\\IM_React\\incidentmanager\\src\\components\\Users\\User.js",[],"C:\\Users\\umar\\Desktop\\Learning\\IM\\IM_React\\incidentmanager\\src\\components\\Users\\AddUser.js",["128","129"],"import {React , useRef, useEffect, useState} from 'react';\r\nimport PageActions from \"../PageActions\";\r\nimport M from 'materialize-css';\r\nimport {  useHistory  } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport { addNewUser } from '../../store/actions/usersActions';\r\n\r\n\r\n function AddUser({addNewUser}){\r\n\r\n\r\n    const history = useHistory();\r\n\r\n    const [firstName, setFirstName] = useState(\"\");\r\n    const [lastName, setLastName] = useState(\"\");\r\n    const [email, setEmail] = useState(\"\");  \r\n    const [phone, setPhone] = useState(\"\");  \r\n    const [profilePic , setProfilePic] = useState(null);\r\n\r\n    const [formError, setFormError] = useState(\"\");\r\n\r\n    useEffect(() => {     \r\n       \r\n      \r\n    }, []);\r\n\r\n   const onFileChange = (event) => {    \r\n     \r\n    setProfilePic(event.target.files);\r\n   };\r\n\r\n   const cancelClick = (event) => {\r\n     event.preventDefault();\r\n     history.goBack();\r\n     //console.log(history);\r\n   };\r\n\r\n   const validateForm = () => {\r\n\r\n    if(firstName === \"\" || lastName === \"\" || email === \"\"  || phone === \"\" )\r\n        return false;\r\n    return true;\r\n\r\n   }\r\n\r\n   const saveClick = (event) => {\r\n    event.preventDefault();     \r\n    if(!validateForm()){\r\n      setFormError(\"Please complete required fields before saving.\")\r\n      return;\r\n    }\r\n    \r\n    setFormError(\"\");\r\n   \r\n   \r\n    const formData = new FormData(); \r\n\r\n    if(profilePic){\r\n       \r\n          formData.append( \r\n            \"Attachment1\", \r\n            profilePic[0], \r\n            profilePic[0].name \r\n          );\r\n          }\r\n     formData.append(\"FirstName\", firstName); \r\n     formData.append(\"LastName\", lastName);\r\n     formData.append(\"Email\", email); \r\n     formData.append(\"Phone\", email); \r\n     addNewUser(formData);\r\n  }; \r\n\r\n \r\n    return (\r\n      <>\r\n        <PageActions Title={\"Add new User\"} />\r\n        <section>\r\n          <div className=\"container\">\r\n            <div className=\"row\">\r\n              <div className=\"col s12 l10 offset-l1\">\r\n                <form>\r\n                  <div className=\"row\">\r\n                    <div className=\"col s12 l6\">\r\n                      <div className=\"input-field \">\r\n                        <input\r\n                         className=\"validate\"\r\n                          required\r\n                          type=\"text\"\r\n                          id=\"firstName\"\r\n                          value={firstName}\r\n                          onChange={(e) => setFirstName(e.target.value)}\r\n                        />\r\n                        <label htmlFor=\"firstName\">First Name</label>\r\n                      </div>\r\n                    </div>\r\n\r\n                    <div className=\"input-field col s12 l6\">                    \r\n                        <input\r\n                            className=\"validate\"\r\n                            required\r\n                            type=\"text\"\r\n                            id=\"lastName\"\r\n                            value={lastName}\r\n                            onChange={(e) => setLastName(e.target.value)}\r\n                            />\r\n                            <label htmlFor=\"lastName\">Last Name</label> \r\n                    </div>\r\n                                      \r\n                  </div>\r\n                  <div className=\"input-field\">\r\n                         <input\r\n                            className=\"validate\"\r\n                            required\r\n                            type=\"email\"\r\n                            id=\"email\"\r\n                            value={email}\r\n                            onChange={(e) => setEmail(e.target.value)}\r\n                            />\r\n                            <label htmlFor=\"email\">Email</label> \r\n                  </div>\r\n\r\n                  <div className=\"input-field\">\r\n                         <input\r\n                            className=\"validate\"\r\n                            required\r\n                            type=\"text\"\r\n                            id=\"phone\"\r\n                            value={phone}\r\n                            onChange={(e) => setPhone(e.target.value)}\r\n                            />\r\n                            <label htmlFor=\"phone\">Phone</label> \r\n                  </div>\r\n\r\n                  <div className=\"file-field input-field\">\r\n                    <div className=\"btn indigo darken-2\">\r\n                      <i className=\"material-icons \">attachment</i>\r\n                      <input\r\n                        type=\"file\"\r\n                        id=\"attachment\"                        \r\n                        onChange={onFileChange}\r\n                      />\r\n                    </div>\r\n                    <div className=\"file-path-wrapper\">\r\n                      <input\r\n                        className=\"file-path validate\"\r\n                        type=\"text\"\r\n                        placeholder=\"Upload profile picture\"\r\n                      />\r\n                    </div>\r\n                  </div>\r\n                  \r\n                  <div className=\"input-field\">\r\n                      <p className=\"red-text center\">{formError ? formError : \"\" }</p>\r\n                  </div>\r\n\r\n                  \r\n                  <div className=\"input-field \">\r\n                    <button\r\n                      className=\"btn green darken-2 left\"\r\n                      onClick={saveClick}\r\n                    >\r\n                      <span>Save</span>\r\n                      <i className=\"material-icons right\">save</i>\r\n                    </button>\r\n\r\n                    <button\r\n                      className=\"btn yellow darken-4 left\"\r\n                      onClick={cancelClick}\r\n                    >\r\n                      <span>Cancel</span>\r\n                      <i className=\"material-icons right\">cancel</i>\r\n                    </button>\r\n                  </div>\r\n                </form>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </section>\r\n      </>\r\n    );\r\n}\r\n\r\nconst mapStateToProps = (state) => {        \r\n    return{\r\n        allAssignees : state.users.users,\r\n        user_Name :state.userLogin.user_Name, // Logged in User's name\r\n        userId :state.userLogin.userId,  // logged in User Id       \r\n    }\r\n  }\r\n  \r\n  const mapDispatchToProps = (dispatch) => {\r\n    return {       \r\n        addNewUser : (formData) => dispatch(addNewUser(formData))\r\n    }\r\n  }\r\n  \r\nexport default connect(mapStateToProps, mapDispatchToProps)(AddUser);\r\n","C:\\Users\\umar\\Desktop\\Learning\\IM\\IM_React\\incidentmanager\\src\\components\\Incidents\\IncidentDetails.js",["130","131","132","133"],"C:\\Users\\umar\\Desktop\\Learning\\IM\\IM_React\\incidentmanager\\src\\components\\Incidents\\Comment.js",["134","135","136","137"],{"ruleId":"138","replacedBy":"139"},{"ruleId":"140","replacedBy":"141"},{"ruleId":"142","severity":1,"message":"143","line":46,"column":20,"nodeType":"144","messageId":"145","endLine":46,"endColumn":24},{"ruleId":"146","severity":1,"message":"147","line":16,"column":11,"nodeType":"148","endLine":16,"endColumn":77},{"ruleId":"146","severity":1,"message":"149","line":31,"column":15,"nodeType":"148","endLine":31,"endColumn":18},{"ruleId":"146","severity":1,"message":"147","line":34,"column":15,"nodeType":"148","endLine":34,"endColumn":77},{"ruleId":"146","severity":1,"message":"149","line":60,"column":15,"nodeType":"148","endLine":60,"endColumn":44},{"ruleId":"146","severity":1,"message":"147","line":63,"column":15,"nodeType":"148","endLine":63,"endColumn":50},{"ruleId":"150","severity":1,"message":"151","line":21,"column":8,"nodeType":"152","endLine":21,"endColumn":10,"suggestions":"153"},{"ruleId":"150","severity":1,"message":"151","line":37,"column":8,"nodeType":"152","endLine":37,"endColumn":38,"suggestions":"154"},{"ruleId":"150","severity":1,"message":"155","line":38,"column":8,"nodeType":"152","endLine":38,"endColumn":16,"suggestions":"156"},{"ruleId":"146","severity":1,"message":"149","line":44,"column":15,"nodeType":"148","endLine":44,"endColumn":19},{"ruleId":"146","severity":1,"message":"149","line":17,"column":19,"nodeType":"148","endLine":17,"endColumn":53},{"ruleId":"146","severity":1,"message":"149","line":22,"column":19,"nodeType":"148","endLine":22,"endColumn":51},{"ruleId":"146","severity":1,"message":"149","line":27,"column":19,"nodeType":"148","endLine":27,"endColumn":52},{"ruleId":"142","severity":1,"message":"143","line":33,"column":20,"nodeType":"144","messageId":"145","endLine":33,"endColumn":24},{"ruleId":"142","severity":1,"message":"143","line":48,"column":20,"nodeType":"144","messageId":"145","endLine":48,"endColumn":24},{"ruleId":"150","severity":1,"message":"157","line":45,"column":8,"nodeType":"152","endLine":45,"endColumn":10,"suggestions":"158"},{"ruleId":"138","replacedBy":"159"},{"ruleId":"140","replacedBy":"160"},{"ruleId":"150","severity":1,"message":"151","line":27,"column":8,"nodeType":"152","endLine":27,"endColumn":38,"suggestions":"161"},{"ruleId":"142","severity":1,"message":"162","line":1,"column":17,"nodeType":"144","messageId":"145","endLine":1,"endColumn":23},{"ruleId":"142","severity":1,"message":"163","line":3,"column":8,"nodeType":"144","messageId":"145","endLine":3,"endColumn":9},{"ruleId":"142","severity":1,"message":"164","line":25,"column":10,"nodeType":"144","messageId":"145","endLine":25,"endColumn":18},{"ruleId":"150","severity":1,"message":"165","line":57,"column":6,"nodeType":"152","endLine":57,"endColumn":8,"suggestions":"166"},{"ruleId":"150","severity":1,"message":"167","line":72,"column":6,"nodeType":"152","endLine":72,"endColumn":20,"suggestions":"168"},{"ruleId":"146","severity":1,"message":"149","line":336,"column":34,"nodeType":"148","endLine":336,"endColumn":37},{"ruleId":"142","severity":1,"message":"169","line":1,"column":17,"nodeType":"144","messageId":"145","endLine":1,"endColumn":26},{"ruleId":"142","severity":1,"message":"162","line":1,"column":38,"nodeType":"144","messageId":"145","endLine":1,"endColumn":44},{"ruleId":"146","severity":1,"message":"149","line":63,"column":30,"nodeType":"148","endLine":63,"endColumn":33},{"ruleId":"146","severity":1,"message":"149","line":117,"column":33,"nodeType":"148","endLine":117,"endColumn":76},"no-native-reassign",["170"],"no-negated-in-lhs",["171"],"no-unused-vars","'data' is assigned a value but never used.","Identifier","unusedVar","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'props'. Either include it or remove the dependency array. However, 'props' will change when *any* prop changes, so the preferred fix is to destructure the 'props' object outside of the useEffect call and refer to those specific props inside useEffect.","ArrayExpression",["172"],["173"],"React Hook useEffect has a missing dependency: 'setPageNumber'. Either include it or remove the dependency array. If 'setPageNumber' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["174"],"React Hook useEffect has a missing dependency: 'getAllAssignees'. Either include it or remove the dependency array. If 'getAllAssignees' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["175"],["170"],["171"],["176"],"'useRef' is defined but never used.","'M' is defined but never used.","'assignee' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'getAllAssignees', 'getIncidentById', and 'match.params.id'. Either include them or remove the dependency array. If 'getIncidentById' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["177"],"React Hook useEffect has a missing dependency: 'allAssignees'. Either include it or remove the dependency array.",["178"],"'useEffect' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"179","fix":"180"},{"desc":"181","fix":"182"},{"desc":"183","fix":"184"},{"desc":"185","fix":"186"},{"desc":"181","fix":"187"},{"desc":"188","fix":"189"},{"desc":"190","fix":"191"},"Update the dependencies array to be: [props]",{"range":"192","text":"193"},"Update the dependencies array to be: [PageNumber, PageSize, Search, props]",{"range":"194","text":"195"},"Update the dependencies array to be: [search, setPageNumber]",{"range":"196","text":"197"},"Update the dependencies array to be: [getAllAssignees]",{"range":"198","text":"199"},{"range":"200","text":"195"},"Update the dependencies array to be: [getAllAssignees, getIncidentById, match.params.id]",{"range":"201","text":"202"},"Update the dependencies array to be: [allAssignees, incidentData]",{"range":"203","text":"204"},[746,748],"[props]",[1135,1165],"[PageNumber, PageSize, Search, props]",[944,952],"[search, setPageNumber]",[1661,1663],"[getAllAssignees]",[807,837],[1892,1894],"[getAllAssignees, getIncidentById, match.params.id]",[2465,2479],"[allAssignees, incidentData]"]